### Variables

# Logo key. Use Mod1 for Alt.
set $mod Mod4

# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l

# Preferred terminal emulator
set $terminal alacritty

# Workspaces
set $ws1 1:Web
set $ws2 2:Code
set $ws3 3:Other
set $ws4 4:Media
set $ws5 5:Chat

### Output configuration
# output "*" {
    # background #000000 solid_color
#    background ~/pics/wallpaper/mars-globe-valles-marineris-enhanced.png fill
# }
set $wallpapers_path $HOME/Pictures/Wallpapers

output "*" {
    background $(find ~/Pictures/Wallpapers/ -type f | shuf -n 1) fill
}

# set $output1 "HDMI-A-2"
# output $output1 {
    # position 0 0
    # resolution 1920x1080 
# }

# Hide borders
default_border none
default_floating_border none

# Disable focus on mouse over window
focus_follows_mouse no

### Input configuration
input type:keyboard {
    repeat_delay 150
    repeat_rate 15

    xkb_layout us,ru
    xkb_variant altgr-intl,
    xkb_options grp:shifts_toggle
}

### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Shift+Return exec $terminal

    # Kill focused window
    bindsym $mod+Shift+c kill

    # Start your launcher
    # bindsym $mod+p exec rofi -show run
    bindsym $mod+p exec wofi --lines=5 --show run
    bindsym $mod+c exec wofi --lines=5 --show calc -no-show-match -calc-command "echo '{result}'" | wl-copy

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+r reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+q exec swaynag -t warning -m 'Do you really want to exit sway?' -b 'Yes, exit sway' 'swaymsg exit'


    # Screenshot and copy to clipboard
    bindsym --release Print exec grim - | wl-copy
    # Screenshot region and copy to clipboard
    bindsym --release $mod+Print exec grim -g \"$(slurp)" - | wl-copy --type "image/png"

    # Copy color info to clipboard
    bindsym --release $mod+equal exec grim -g \"$(slurp -p)" -t ppm - | convert - -format '%[pixel:p{0,0}]' txt:- | wl-copy --primary --type "image/png"

#
# Moving around:
#
    # Move your focus around
    # bindsym $mod+$left focus left
    bindsym $mod+j focus next
    bindsym $mod+k focus prev
    # bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    # bindsym $mod+Left focus left
    # bindsym $mod+Down focus down
    # bindsym $mod+Up focus up
    # bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+j move left
    bindsym $mod+Shift+k move right
    # bindsym $mod+Shift+$down move down
    # bindsym $mod+Shift+$up move up
    # Ditto, with arrow keys
    # bindsym $mod+Shift+Left move left
    # bindsym $mod+Shift+Down move down
    # bindsym $mod+Shift+Up move up
    # bindsym $mod+Shift+Right move right

#
# Workspaces:
# 

    # Switch to workspace
    bindsym $mod+1 workspace $ws1
    bindsym $mod+2 workspace $ws2
    bindsym $mod+3 workspace $ws3
    bindsym $mod+4 workspace $ws4
    bindsym $mod+5 workspace $ws5

    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace $ws1
    bindsym $mod+Shift+2 move container to workspace $ws2
    bindsym $mod+Shift+3 move container to workspace $ws3
    bindsym $mod+Shift+4 move container to workspace $ws4
    bindsym $mod+Shift+5 move container to workspace $ws5

    # Assign applications to specific workspaces
    assign [class="^firefoxdeveloperdition$"] $ws1
    assign [class="^Google-chrome$"] $ws1
    assign [class="^figma-linux$"] $ws4
    assign [class="^Spotify$"] $ws4
    assign [class="^vlc$"] $ws4
    assign [app_id="telegramdesktop"] $ws5

    for_window [window_role="pavucontrol-qt"] floating enable

    for_window [window_role="pop-up"] floating enable
    for_window [window_role="bubble"] floating enable
    for_window [window_role="task_dialog"] floating enable
    for_window [window_role="dialog"] floating enable
    for_window [title="Sudoku"] floating enable
    for_window [window_role="menu"] floating enable
    for_window [app_id="qt4-ssh-askpass"] floating enable
    for_window [class="Qt4-ssh-askpass"] floating enable

    for_window [window_role="GtkFileChooserDialog"] resize set 640 600
    for_window [window_role="GtkFileChooserDialog"] move position center
    for_window [title="Open file"] resize set 640 600

    for_window [title="Choose files"] floating enable 
    for_window [title="Choose files"] resize set 640 600

#
# Layout:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    ## Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

   # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show


# Power menu
    # set $sysmenu "  [<b>r</b>]estart - [<b>l</b>]ogout - [<b>s</b>]uspend - re[<b>b</b>]oot - po[<b>w</b>]eroff  "
    set $sysmenu "(r)estart (l)ogout) (s)uspend re(b)oot po(w)eroff"

    bindsym $mod+Shift+e mode $sysmenu

    mode $sysmenu {
        bindsym r         restart
        bindsym l         exit
        bindsym w         exec "systemctl poweroff"
        bindsym b         exec "systemctl reboot"
        bindsym s         exec "systemctl suspend"
        bindsym Return    mode "default"
        bindsym Escape    mode "default"
    }

#
# Resizing containers:
#
# mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    # bindsym $mod+Shift+$left resize shrink width 10px
    # bindsym $mod+Shift+$right resize grow height 10px
    bindsym $mod+h resize shrink width 80px
    bindsym $mod+l resize grow width 80px

    # Ditto, with arrow keys
    # bindsym Left resize shrink width 10px
    # bindsym Down resize grow height 10px
    # bindsym Up resize shrink height 10px
    # bindsym Right resize grow width 10px

    # Return to default mode
    # bindsym Return mode "default"
    # bindsym Escape mode "default"
# }
# bindsym $mod+r mode "resize"

# Waybar
bar {
    swaybar_command waybar
}

# Notifcations via Mako
# exec mako

# Adjust screen colors based on surroundings
# exec redshift

# See https://github.com/swaywm/sway/wiki/Systemd-integration
# exec "systemctl --user import-environment; systemctl --user start sway-session.target"

# include /etc/sway/config.d/*
# include /etc/sway/config
